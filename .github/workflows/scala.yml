name: Scala CI

on:
  push:
    branches:
      - master
      - release/*
      - dev/*
      - cluster/*
  pull_request:
    branches:
      - master
      - release/*
      - dev/*
      - cluster/*
  workflow_dispatch:
jobs:
  tarsrc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: generate routes
        run: ./py-build-routes.py 10
      - name: tar all
        run: tar -zcf src.tar app conf lib project public sbt-dist script seed test build.sbt sbt sbt.bat sbt-debug
      - name: save tar
        uses: actions/upload-artifact@v2
        with:
          name: src.tar
          path: src.tar
  imagedev:
    runs-on: ubuntu-latest
    needs: tarsrc
    steps:
      - uses: actions/checkout@v2
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: src.tar
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / _)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / _)" >> $GITHUB_ENV

      - name: echo branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: build image
        run: docker build -t registry.digitalocean.com/community-boating-docker/cbidb-api-dev:${{ env.BRANCH_NAME }} -f Dockerfile.build .

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600
      - name: push image
        run: docker push registry.digitalocean.com/community-boating-docker/cbidb-api-dev:${{ env.BRANCH_NAME }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  buildpub:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: generate routes
      run: ./py-build-routes.py 1
    - name: build deb
      run: sbt debian:packageBin
    - name: rename deb
      run: mv target/CBI-DB-API_0.1.0_all.deb target/CBI-DB-API_0.1.0_all-pub.deb
    - name: save deb
      uses: actions/upload-artifact@v2
      with:
        name: CBI-DB-API_0.1.0_all-pub.deb
        path: target/CBI-DB-API_0.1.0_all-pub.deb
  imagepub:
    runs-on: ubuntu-latest
    needs: buildpub
    steps:
      - uses: actions/checkout@v2
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: CBI-DB-API_0.1.0_all-pub.deb
      - name: rename image
        run: mv CBI-DB-API_0.1.0_all-pub.deb CBI-DB-API_0.1.0_all.deb
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / _)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / _)" >> $GITHUB_ENV

      - name: echo branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: build image
        run: docker build -t registry.digitalocean.com/community-boating-docker/cbidb-api-pub:${{ env.BRANCH_NAME }} .

      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600
      - name: push image
        run: docker push registry.digitalocean.com/community-boating-docker/cbidb-api-pub:${{ env.BRANCH_NAME }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  buildstaff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: generate routes
        run: ./py-build-routes.py 10
      - name: build deb
        run: sbt debian:packageBin
      - name: rename deb
        run: mv target/CBI-DB-API_0.1.0_all.deb target/CBI-DB-API_0.1.0_all-staff.deb
      - name: save artifact
        uses: actions/upload-artifact@v2
        with:
          name: CBI-DB-API_0.1.0_all-staff.deb
          path: target/CBI-DB-API_0.1.0_all-staff.deb
  imagestaff:
    runs-on: ubuntu-latest
    needs: buildstaff
    steps:
      - uses: actions/checkout@v2
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: CBI-DB-API_0.1.0_all-staff.deb
      - name: rename image
        run: mv CBI-DB-API_0.1.0_all-staff.deb CBI-DB-API_0.1.0_all.deb
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / _)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / _)" >> $GITHUB_ENV

      - name: echo branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: build image
        run: docker build -t registry.digitalocean.com/community-boating-docker/cbidb-api-staff:${{ env.BRANCH_NAME }} .

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600
      - name: push image
        run: docker push registry.digitalocean.com/community-boating-docker/cbidb-api-staff:${{ env.BRANCH_NAME }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}