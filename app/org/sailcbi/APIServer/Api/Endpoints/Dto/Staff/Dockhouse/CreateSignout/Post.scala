package org.sailcbi.APIServer.Api.Endpoints.Dto.Staff.Dockhouse.CreateSignout

import play.api.libs.json.{JsValue, Json}

/**
 * !!!!!!!!!!!!
 * This file is AUTO-GENERATED by cbidb-schema
 * Do not manually alter this file, or your changes will be lost
 * !!!!!!!!!!!!
 */
case class StaffDockhouseCreateSignoutPostResponseSuccessDto (
	signoutId: Int,
	personId: Option[Int],
	programId: Int,
	boatId: Int,
	signoutType: String,
	cardNum: Option[String],
	sailNumber: Option[String],
	hullNumber: Option[String],
	testRatingId: Option[Int],
	testResult: Option[String],
	isQueued: String,
	signoutDatetime: Option[String],
	signinDatetime: Option[String],
	comments: Option[String],
	$$apClassInstance: StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance,
)

case class StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance (
	instanceId: Int,
	cancelledDatetime: Option[String],
)

object StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance {
	implicit val format = Json.format[StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance]
	def apply(v: JsValue): StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance
		= v.as[StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance]
}

object StaffDockhouseCreateSignoutPostResponseSuccessDto {
	implicit val StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstanceFormat
		= StaffDockhouseCreateSignoutPostResponseSuccessDto_ApClassInstance.format
	implicit val format = Json.format[StaffDockhouseCreateSignoutPostResponseSuccessDto]
	def apply(v: JsValue): StaffDockhouseCreateSignoutPostResponseSuccessDto
		= v.as[StaffDockhouseCreateSignoutPostResponseSuccessDto]
}


case class StaffDockhouseCreateSignoutPostRequestDto (
	skipperPersonId: Int,
	programId: Int,
	skipperCardNumber: String,
	skipperTestRatingId: Option[Int],
	boatId: Int,
	sailNumber: Option[String],
	hullNumber: Option[String],
	classSessionId: Option[Int],
	isRacing: Boolean,
	dockmasterOverride: Boolean,
	didInformKayakRules: Boolean,
	signoutCrew: List[StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew],
)

case class StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew (
	personId: Int,
	cardNumber: String,
	testRatingId: Option[Int],
)

object StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew {
	implicit val format = Json.format[StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew]
	def apply(v: JsValue): StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew
		= v.as[StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew]
}

object StaffDockhouseCreateSignoutPostRequestDto {
	implicit val StaffDockhouseCreateSignoutPostRequestDto_SignoutCrewFormat
		= StaffDockhouseCreateSignoutPostRequestDto_SignoutCrew.format
	implicit val format = Json.format[StaffDockhouseCreateSignoutPostRequestDto]
	def apply(v: JsValue): StaffDockhouseCreateSignoutPostRequestDto
		= v.as[StaffDockhouseCreateSignoutPostRequestDto]
}

