package org.sailcbi.APIServer.Api.Endpoints.Dto.Staff.Dockhouse.ScanCard

import play.api.libs.json.{JsValue, Json}

/**
 * !!!!!!!!!!!!
 * This file is AUTO-GENERATED by cbidb-schema
 * Do not manually alter this file, or your changes will be lost
 * !!!!!!!!!!!!
 */
case class StaffDockhouseScanCardGetResponseSuccessDto (
	personId: Int,
	cardNumber: String,
	nameFirst: String,
	nameLast: String,
	bannerComment: Option[String],
	specialNeeds: Option[String],
	apClassSignupsToday: List[StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday],
	jpClassSignupsToday: List[StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday],
	maxFlagsPerBoat: List[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat],
)

case class StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday (
	signupId: Int,
	instanceId: Int,
	personId: Int,
	signupType: String,
	signupDatetime: String,
	sequence: Int,
)

object StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday {
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday]
}

case class StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday (
	signupId: Int,
	instanceId: Int,
	personId: Int,
	signupType: String,
	signupDatetime: String,
	sequence: Int,
)

object StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday {
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday]
}

case class StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat (
	$$boatType: StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType,
	$$programId: StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId,
	maxFlag: String,
)

case class StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType (
	boatId: Int,
)

object StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType {
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType]
}

case class StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId (
	programId: Int,
)

object StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId {
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId]
}

object StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat {
	implicit val StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatTypeFormat
		= StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_BoatType.format
	implicit val StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramIdFormat
		= StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat_ProgramId.format
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat]
}

object StaffDockhouseScanCardGetResponseSuccessDto {
	implicit val StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsTodayFormat
		= StaffDockhouseScanCardGetResponseSuccessDto_ApClassSignupsToday.format
	implicit val StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsTodayFormat
		= StaffDockhouseScanCardGetResponseSuccessDto_JpClassSignupsToday.format
	implicit val StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoatFormat
		= StaffDockhouseScanCardGetResponseSuccessDto_MaxFlagsPerBoat.format
	implicit val format = Json.format[StaffDockhouseScanCardGetResponseSuccessDto]
	def apply(v: JsValue): StaffDockhouseScanCardGetResponseSuccessDto
		= v.as[StaffDockhouseScanCardGetResponseSuccessDto]
}

