package org.sailcbi.APIServer.Api.Endpoints.Dto.Staff.Rest.ApClassSessions.Today

import play.api.libs.json.{JsValue, Json}

/**
 * !!!!!!!!!!!!
 * This file is AUTO-GENERATED by cbidb-schema
 * Do not manually alter this file, or your changes will be lost
 * !!!!!!!!!!!!
 */
case class DtoStaffRestApClassSessionsTodayGetResponseSuccess (
	sessionId: Int,
	instanceId: Int,
	headcount: Option[Int],
	cancelledDatetime: Option[String],
	sessionDatetime: String,
	sessionLength: Double,
	isMakeup: Boolean,
	$$apClassInstance: DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance,
)

case class DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance (
	instanceId: Int,
	cancelledDatetime: Option[String],
	signupsStartOverride: Option[String],
	signupMin: Option[Int],
	price: Option[Double],
	signupMax: Option[Int],
	formatId: Int,
	hideOnline: Boolean,
	cancelByOverride: Option[String],
	locationString: Option[String],
	doNotAutoCancel: Boolean,
	$$apClassSignups: List[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups],
)

case class DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups (
	instanceId: Int,
	discountInstanceId: Option[Int],
	voidedOnline: Boolean,
	personId: Int,
	orderId: Option[Int],
	price: Option[Double],
	signupId: Int,
	closeId: Option[Int],
	sequence: Int,
	paymentMedium: Option[String],
	ccTransNum: Option[String],
	paymentLocation: Option[String],
	voidCloseId: Option[Int],
	signupType: String,
	signupNote: Option[String],
	signupDatetime: String,
	$$person: DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person,
	$$apClassWaitlistResult: Option[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult],
)

case class DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person (
	personId: Int,
	nameFirst: Option[String],
	nameLast: Option[String],
)

object DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person {
	implicit val format = Json.format[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person]
	def apply(v: JsValue): DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person
		= v.as[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person]
}

case class DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult (
	wlResult: String,
	foVmDatetime: Option[String],
	offerExpDatetime: String,
	signupId: Int,
	foAlertDatetime: String,
	permitOvercrowd: Boolean,
)

object DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult {
	implicit val format = Json.format[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult]
	def apply(v: JsValue): DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult
		= v.as[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult]
}

object DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups {
	implicit val DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_PersonFormat
		= DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_Person.format
	implicit val DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResultFormat
		= DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups_ApClassWaitlistResult.format
	implicit val format = Json.format[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups]
	def apply(v: JsValue): DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups
		= v.as[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups]
}

object DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance {
	implicit val DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignupsFormat
		= DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance_ApClassSignups.format
	implicit val format = Json.format[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance]
	def apply(v: JsValue): DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance
		= v.as[DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance]
}

object DtoStaffRestApClassSessionsTodayGetResponseSuccess {
	implicit val DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstanceFormat
		= DtoStaffRestApClassSessionsTodayGetResponseSuccess_ApClassInstance.format
	implicit val format = Json.format[DtoStaffRestApClassSessionsTodayGetResponseSuccess]
	def apply(v: JsValue): DtoStaffRestApClassSessionsTodayGetResponseSuccess
		= v.as[DtoStaffRestApClassSessionsTodayGetResponseSuccess]
}

