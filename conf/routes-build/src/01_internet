GET     /ping                               Api.Endpoints.Ping.get()
GET     /flag                           Api.Endpoints.Public.FlagColor.get()
POST    /stripe/create-charge-from-token    Api.Endpoints.Stripe.CreateChargeFromToken.post()
GET     /stripe/token-details               Api.Endpoints.Stripe.GetTokenDetails.get(token: String)
POST    /stripe/sync-db                     Api.Endpoints.Stripe.SyncLocalDBWithStripe.post()
POST 	/symon				Api.Endpoints.Symon.PostSymonRun.post()
GET     /ip                                     Api.Endpoints.GetIP.get()

GET     /jp-class-instances                 Api.Endpoints.Public.JpClassInstances.get(startDate: Option[String])
GET     /ap-class-instances                 Api.Endpoints.Public.ApClassInstances.get(startDate: Option[String])
GET     /jp-teams                           Api.Endpoints.Public.JpTeams.get()

GET     /member-welcome                     Api.Endpoints.Member.WelcomePackage.get()

POST    /junior/required                    Api.Endpoints.Member.RequiredInfo.post()
GET    /junior/required                     Api.Endpoints.Member.RequiredInfo.get(personId: Int)

POST    /junior/emerg                               Api.Endpoints.Member.EmergencyContact.post()
GET    /junior/emerg                               Api.Endpoints.Member.EmergencyContact.get(personId: Int)

POST    /junior/swim-proof                               Api.Endpoints.Member.SwimProof.post()
GET    /junior/swim-proof                               Api.Endpoints.Member.SwimProof.get(personId: Int)

POST    /junior/survey                               Api.Endpoints.Member.SurveyInfo.post()
GET    /junior/survey                               Api.Endpoints.Member.SurveyInfo.get(personId: Int)


POST    /junior/scholarship-no                    Api.Endpoints.Member.Scholarship.postNo()
POST    /junior/scholarship-yes                    Api.Endpoints.Member.Scholarship.postYes()

GET    /junior/see-types                    Api.Endpoints.Member.JuniorSeeClassTypes.get(personId: Int)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
