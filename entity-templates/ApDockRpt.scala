package org.sailcbi.APIServer.Entities.EntityDefinitions

import com.coleji.neptune.Storable.FieldValues._
import com.coleji.neptune.Storable.Fields._
import com.coleji.neptune.Storable._
import com.coleji.neptune.Util.Initializable

class ApDockRpt extends StorableClass(ApDockRpt) {
	object values extends ValuesObject {
		val drId = new IntFieldValue(self, ApDockRpt.fields.drId)
		val mercSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.mercSo)
		val kmSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.kmSo)
		val uapkmSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.uapkmSo)
		val r19So = new NullableDoubleFieldValue(self, ApDockRpt.fields.r19So)
		val sonarSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.sonarSo)
		val laserSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.laserSo)
		val 420So = new NullableDoubleFieldValue(self, ApDockRpt.fields.420So)
		val wsSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.wsSo)
		val kayakSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.kayakSo)
		val supSo = new NullableDoubleFieldValue(self, ApDockRpt.fields.supSo)
		val mercUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.mercUsed)
		val kmUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.kmUsed)
		val uapkmUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.uapkmUsed)
		val r19Used = new NullableDoubleFieldValue(self, ApDockRpt.fields.r19Used)
		val sonarUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.sonarUsed)
		val laserUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.laserUsed)
		val 420Used = new NullableDoubleFieldValue(self, ApDockRpt.fields.420Used)
		val wsUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.wsUsed)
		val kayakUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.kayakUsed)
		val supUsed = new NullableDoubleFieldValue(self, ApDockRpt.fields.supUsed)
		val mercUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.mercUnavail)
		val kmUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.kmUnavail)
		val uapkmUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.uapkmUnavail)
		val r19Unavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.r19Unavail)
		val sonarUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.sonarUnavail)
		val laserUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.laserUnavail)
		val 420Unavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.420Unavail)
		val wsUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.wsUnavail)
		val kayakUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.kayakUnavail)
		val supUnavail = new NullableDoubleFieldValue(self, ApDockRpt.fields.supUnavail)
		val skippers = new NullableDoubleFieldValue(self, ApDockRpt.fields.skippers)
		val crew = new NullableDoubleFieldValue(self, ApDockRpt.fields.crew)
		val over18Guests = new NullableDoubleFieldValue(self, ApDockRpt.fields.over18Guests)
		val under18Guests = new NullableDoubleFieldValue(self, ApDockRpt.fields.under18Guests)
		val instructees = new NullableDoubleFieldValue(self, ApDockRpt.fields.instructees)
		val uapSailors = new NullableDoubleFieldValue(self, ApDockRpt.fields.uapSailors)
		val highSchools = new NullableDoubleFieldValue(self, ApDockRpt.fields.highSchools)
		val hsSailors = new NullableDoubleFieldValue(self, ApDockRpt.fields.hsSailors)
		val runAgrounds = new NullableDoubleFieldValue(self, ApDockRpt.fields.runAgrounds)
		val capsizes = new NullableDoubleFieldValue(self, ApDockRpt.fields.capsizes)
		val maxWait = new NullableDoubleFieldValue(self, ApDockRpt.fields.maxWait)
		val 1daySails = new NullableDoubleFieldValue(self, ApDockRpt.fields.1daySails)
		val 1dayKayaks = new NullableDoubleFieldValue(self, ApDockRpt.fields.1dayKayaks)
		val incidents = new NullableStringFieldValue(self, ApDockRpt.fields.incidents)
		val activities = new NullableStringFieldValue(self, ApDockRpt.fields.activities)
		val crwaFlag = new NullableStringFieldValue(self, ApDockRpt.fields.crwaFlag)
		val waterTemp = new NullableDoubleFieldValue(self, ApDockRpt.fields.waterTemp)
		val htCaptain = new NullableStringFieldValue(self, ApDockRpt.fields.htCaptain)
		val htcCheckIn = new NullableStringFieldValue(self, ApDockRpt.fields.htcCheckIn)
		val htcSailorRep = new NullableStringFieldValue(self, ApDockRpt.fields.htcSailorRep)
		val htSailors = new NullableDoubleFieldValue(self, ApDockRpt.fields.htSailors)
		val htBoats = new NullableDoubleFieldValue(self, ApDockRpt.fields.htBoats)
		val htDestination = new NullableStringFieldValue(self, ApDockRpt.fields.htDestination)
		val htDeparture = new NullableStringFieldValue(self, ApDockRpt.fields.htDeparture)
		val htReturn = new NullableStringFieldValue(self, ApDockRpt.fields.htReturn)
		val fnName = new NullableStringFieldValue(self, ApDockRpt.fields.fnName)
		val fnTime = new NullableStringFieldValue(self, ApDockRpt.fields.fnTime)
		val fnStaffCovering = new NullableStringFieldValue(self, ApDockRpt.fields.fnStaffCovering)
		val fnLocation = new NullableStringFieldValue(self, ApDockRpt.fields.fnLocation)
		val fnAttendees = new NullableDoubleFieldValue(self, ApDockRpt.fields.fnAttendees)
		val fnLiquor = new NullableBooleanFIeldValue(self, ApDockRpt.fields.fnLiquor)
		val fnCaterer = new NullableStringFieldValue(self, ApDockRpt.fields.fnCaterer)
		val drDate = new NullableLocalDateTimeFieldValue(self, ApDockRpt.fields.drDate)
		val createdOn = new NullableLocalDateTimeFieldValue(self, ApDockRpt.fields.createdOn)
		val createdBy = new NullableStringFieldValue(self, ApDockRpt.fields.createdBy)
		val updatedOn = new NullableLocalDateTimeFieldValue(self, ApDockRpt.fields.updatedOn)
		val updatedBy = new NullableStringFieldValue(self, ApDockRpt.fields.updatedBy)
	}
}

object ApDockRpt extends StorableObject[ApDockRpt] {
	val entityName: String = "AP_DOCK_RPT"

	object fields extends FieldsObject {
		val drId = new IntDatabaseField(self, "DR_ID")
		val mercSo = new NullableDoubleDatabaseField(self, "MERC_SO")
		val kmSo = new NullableDoubleDatabaseField(self, "KM_SO")
		val uapkmSo = new NullableDoubleDatabaseField(self, "UAPKM_SO")
		val r19So = new NullableDoubleDatabaseField(self, "R19_SO")
		val sonarSo = new NullableDoubleDatabaseField(self, "SONAR_SO")
		val laserSo = new NullableDoubleDatabaseField(self, "LASER_SO")
		val 420So = new NullableDoubleDatabaseField(self, "420_SO")
		val wsSo = new NullableDoubleDatabaseField(self, "WS_SO")
		val kayakSo = new NullableDoubleDatabaseField(self, "KAYAK_SO")
		val supSo = new NullableDoubleDatabaseField(self, "SUP_SO")
		val mercUsed = new NullableDoubleDatabaseField(self, "MERC_USED")
		val kmUsed = new NullableDoubleDatabaseField(self, "KM_USED")
		val uapkmUsed = new NullableDoubleDatabaseField(self, "UAPKM_USED")
		val r19Used = new NullableDoubleDatabaseField(self, "R19_USED")
		val sonarUsed = new NullableDoubleDatabaseField(self, "SONAR_USED")
		val laserUsed = new NullableDoubleDatabaseField(self, "LASER_USED")
		val 420Used = new NullableDoubleDatabaseField(self, "420_USED")
		val wsUsed = new NullableDoubleDatabaseField(self, "WS_USED")
		val kayakUsed = new NullableDoubleDatabaseField(self, "KAYAK_USED")
		val supUsed = new NullableDoubleDatabaseField(self, "SUP_USED")
		val mercUnavail = new NullableDoubleDatabaseField(self, "MERC_UNAVAIL")
		val kmUnavail = new NullableDoubleDatabaseField(self, "KM_UNAVAIL")
		val uapkmUnavail = new NullableDoubleDatabaseField(self, "UAPKM_UNAVAIL")
		val r19Unavail = new NullableDoubleDatabaseField(self, "R19_UNAVAIL")
		val sonarUnavail = new NullableDoubleDatabaseField(self, "SONAR_UNAVAIL")
		val laserUnavail = new NullableDoubleDatabaseField(self, "LASER_UNAVAIL")
		val 420Unavail = new NullableDoubleDatabaseField(self, "420_UNAVAIL")
		val wsUnavail = new NullableDoubleDatabaseField(self, "WS_UNAVAIL")
		val kayakUnavail = new NullableDoubleDatabaseField(self, "KAYAK_UNAVAIL")
		val supUnavail = new NullableDoubleDatabaseField(self, "SUP_UNAVAIL")
		val skippers = new NullableDoubleDatabaseField(self, "SKIPPERS")
		val crew = new NullableDoubleDatabaseField(self, "CREW")
		val over18Guests = new NullableDoubleDatabaseField(self, "OVER18_GUESTS")
		val under18Guests = new NullableDoubleDatabaseField(self, "UNDER18_GUESTS")
		val instructees = new NullableDoubleDatabaseField(self, "INSTRUCTEES")
		val uapSailors = new NullableDoubleDatabaseField(self, "UAP_SAILORS")
		val highSchools = new NullableDoubleDatabaseField(self, "HIGH_SCHOOLS")
		val hsSailors = new NullableDoubleDatabaseField(self, "HS_SAILORS")
		val runAgrounds = new NullableDoubleDatabaseField(self, "RUN_AGROUNDS")
		val capsizes = new NullableDoubleDatabaseField(self, "CAPSIZES")
		val maxWait = new NullableDoubleDatabaseField(self, "MAX_WAIT")
		val 1daySails = new NullableDoubleDatabaseField(self, "1DAY_SAILS")
		val 1dayKayaks = new NullableDoubleDatabaseField(self, "1DAY_KAYAKS")
		val incidents = new NullableStringDatabaseField(self, "INCIDENTS", 4000)
		val activities = new NullableStringDatabaseField(self, "ACTIVITIES", 4000)
		val crwaFlag = new NullableStringDatabaseField(self, "CRWA_FLAG", 20)
		val waterTemp = new NullableDoubleDatabaseField(self, "WATER_TEMP")
		val htCaptain = new NullableStringDatabaseField(self, "HT_CAPTAIN", 200)
		val htcCheckIn = new NullableStringDatabaseField(self, "HTC_CHECK_IN", 200)
		val htcSailorRep = new NullableStringDatabaseField(self, "HTC_SAILOR_REP", 200)
		val htSailors = new NullableDoubleDatabaseField(self, "HT_SAILORS")
		val htBoats = new NullableDoubleDatabaseField(self, "HT_BOATS")
		val htDestination = new NullableStringDatabaseField(self, "HT_DESTINATION", 50)
		val htDeparture = new NullableStringDatabaseField(self, "HT_DEPARTURE", 10)
		val htReturn = new NullableStringDatabaseField(self, "HT_RETURN", 10)
		val fnName = new NullableStringDatabaseField(self, "FN_NAME", 200)
		val fnTime = new NullableStringDatabaseField(self, "FN_TIME", 20)
		val fnStaffCovering = new NullableStringDatabaseField(self, "FN_STAFF_COVERING", 100)
		val fnLocation = new NullableStringDatabaseField(self, "FN_LOCATION", 100)
		val fnAttendees = new NullableDoubleDatabaseField(self, "FN_ATTENDEES")
		val fnLiquor = new NullableBooleanDatabaseField(self, "FN_LIQUOR")
		val fnCaterer = new NullableStringDatabaseField(self, "FN_CATERER", 200)
		val drDate = new NullableLocalDateTimeDatabaseField(self, "DR_DATE")
		val createdOn = new NullableLocalDateTimeDatabaseField(self, "CREATED_ON")
		val createdBy = new NullableStringDatabaseField(self, "CREATED_BY", 500)
		val updatedOn = new NullableLocalDateTimeDatabaseField(self, "UPDATED_ON")
		val updatedBy = new NullableStringDatabaseField(self, "UPDATED_BY", 500)
	}

	def primaryKey: IntDatabaseField = fields.drId
}